import javax.json.*;
import java.io.InputStream;
import java.net.*;
import java.util.Objects;

public class JavaDataApp {  
    static String MY_URL = "https://api.steampowered.com/ISteamApps/GetAppList/v2/";
    
    public static void main(String[] args) {
        getAppID("DOOM Eternal");
    }

    public static void getAppID(String appName){
        InputStream is = openURL(MY_URL);
        JsonReader jsonReader = Json.createReader(is);
        JsonStructure js = jsonReader.read();
        jsonReader.close();
        closeStream(is);

        JsonArray jsa = null;
        JsonObject jso = null;
        if (js instanceof JsonObject) {
            jso = (JsonObject) js;
            //jsa = jso.getJsonArray("incidents");  // API v2
            jso = jso.getJsonObject("applist");
            jsa = jso.getJsonArray("apps");
        } else {
            jsa = (JsonArray)js;
        }
        int s = jsa.size();
        Names [] nameData = new Names [s];
        for (int i=0; i<s; i++){
            JsonObject jo = jsa.getJsonObject(i);
            //Extract
            int appid = jo.getInt("appid");
            String name = jo.getString("name");
            //if (Objects.equals(name, appName)){
                //return jo.getInt("appid");
            //}
            //Transform
            Names names = new Names(appid, name);
            //Load
            nameData[i] = names;
        }
        //return 0;
        
        for (int i=0; i<nameData.length; i++) {
            Names name = nameData[i];
            System.out.println(i + ") " + name);
        }
    }

    // copied from Jason Millers Bike project
    private static InputStream openURL (String http) {
        URL url;
        InputStream source = null;
        try {
            url = new URL(http);
            source = url.openStream();
        } catch (Exception e) {
            System.err.println("Cannot open URL "+http);
            System.err.println(e);
        }
        return source;
    }

    // copied
    private static void closeStream (InputStream is) {
        try {
            is.close();
        } catch (Exception e) {
            System.err.println("Could not close the input stream.");
            System.err.println(e);
        }
    }
}
